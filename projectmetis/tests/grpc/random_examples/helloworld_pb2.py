import sys
import os.path

## Set path so that you can import the local modules
sys.path.append(os.path.join(os.path.dirname(__file__), '../../'))

# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tests/grpc/helloworld.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='tests/grpc/helloworld.proto',
  package='tests.grpc',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x1btests/grpc/helloworld.proto\x12\ntests.grpc\"\x1d\n\x0cHelloRequest\x12\r\n\x05value\x18\x01 \x01(\t\"\x1b\n\nHelloReply\x12\r\n\x05value\x18\x01 \x01(\t2S\n\x0fGreetingService\x12@\n\nHelloWorld\x12\x18.tests.grpc.HelloRequest\x1a\x16.tests.grpc.HelloReply\"\x00\x62\x06proto3')
)




_HELLOREQUEST = _descriptor.Descriptor(
  name='HelloRequest',
  full_name='tests.grpc.HelloRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='tests.grpc.HelloRequest.value', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=43,
  serialized_end=72,
)


_HELLOREPLY = _descriptor.Descriptor(
  name='HelloReply',
  full_name='tests.grpc.HelloReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='tests.grpc.HelloReply.value', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=74,
  serialized_end=101,
)

DESCRIPTOR.message_types_by_name['HelloRequest'] = _HELLOREQUEST
DESCRIPTOR.message_types_by_name['HelloReply'] = _HELLOREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

HelloRequest = _reflection.GeneratedProtocolMessageType('HelloRequest', (_message.Message,), dict(
  DESCRIPTOR = _HELLOREQUEST,
  __module__ = 'tests.grpc.helloworld_pb2'
  # @@protoc_insertion_point(class_scope:tests.grpc.HelloRequest)
  ))
_sym_db.RegisterMessage(HelloRequest)

HelloReply = _reflection.GeneratedProtocolMessageType('HelloReply', (_message.Message,), dict(
  DESCRIPTOR = _HELLOREPLY,
  __module__ = 'tests.grpc.helloworld_pb2'
  # @@protoc_insertion_point(class_scope:tests.grpc.HelloReply)
  ))
_sym_db.RegisterMessage(HelloReply)



_GREETINGSERVICE = _descriptor.ServiceDescriptor(
  name='GreetingService',
  full_name='tests.grpc.GreetingService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=103,
  serialized_end=186,
  methods=[
  _descriptor.MethodDescriptor(
    name='HelloWorld',
    full_name='tests.grpc.GreetingService.HelloWorld',
    index=0,
    containing_service=None,
    input_type=_HELLOREQUEST,
    output_type=_HELLOREPLY,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_GREETINGSERVICE)

DESCRIPTOR.services_by_name['GreetingService'] = _GREETINGSERVICE

# @@protoc_insertion_point(module_scope)
