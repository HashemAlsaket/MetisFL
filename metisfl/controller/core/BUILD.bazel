load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library")
load("@pybind11_bazel//:build_defs.bzl", "pybind_extension")
load("@rules_python//python:defs.bzl", "py_library")

package(default_visibility = ["//visibility:public"])


pybind_extension(
    # The name of this rule is associated with how the module will be imported
    # in python scripts. The rule will generate the lib controller.so, which is
    # also a data dependency for the py_library() rule below; therefore it needs
    # to remain UNCHANGED!
    name = "controller",
    srcs = ["controller_pybind.cc"],
    deps = [
        ":controller",
    ],
    linkstatic=True
)

cc_library(
    name = "controller",
    srcs = [
        "controller.cc",
        "controller_servicer.cc",
        "controller_utils.cc",
        "learner_manager.cc",
        "model_manager.cc",
    ],
    hdrs = glob(["*.h"]),
    deps = [
        "//metisfl/controller/aggregation:aggregation",
        "//metisfl/controller/scaling",
        "//metisfl/controller/selection",
        "//metisfl/controller/store:storing",
        "//metisfl/controller/scheduling:scheduling",
        "//metisfl/proto:cc_grpc_lib",
        "//metisfl/controller/common:common",
        "@absl//absl/status:statusor",
        "@absl//absl/container:flat_hash_map",
        "@absl//absl/memory",
        "@com_github_google_glog//:glog",
    ],
)

