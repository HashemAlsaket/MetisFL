package(default_visibility = ["//visibility:public"])

load("@python_deps//:requirements.bzl", "requirement")
load("@rules_python//python:defs.bzl", "py_library", "py_binary")

# Generates controller executable binary.
py_library(
    name = "driver_py_lib",
    srcs = [
        "driver_controller_client.py",
        "driver_learner_client.py",
        "driver_session.py",
    ],
    srcs_version = "PY3",
    deps = [
        "//projectmetis/python/logging:logging_py_lib",
        "//projectmetis/python/utils:utils_py_lib",
        requirement("fabric"),
        requirement("Pebble"),
    ],
)

# Generates controller executable binary.
py_binary(
    name = "initialize_controller",
    main = "init_controller.py",
    srcs = [
        "init_controller.py"
    ],
    srcs_version = "PY3",
    python_version = "PY3",
    legacy_create_init = False,
    deps = [
        "//projectmetis/python/logging:logging_py_lib",
        "//pybind/controller:controller_py_lib",
        "//projectmetis/proto:controller_py_grpc",
    ],
)

# Generates learner executable binary.
py_binary(
    name = "initialize_learner",
    main = "init_learner.py",
    srcs = [
        "init_learner.py"
    ],
    srcs_version = "PY3",
    python_version = "PY3",
    legacy_create_init = False,
    deps = [
        "//experiments/keras/models:keras_models_py_lib",
        "//projectmetis/python/learner:learner_py_lib",
        "//projectmetis/python/models:models_py_lib",
        "//projectmetis/python/models/pytorch:models_pytorch_py_lib",
        requirement("numpy"),
    ]
)
