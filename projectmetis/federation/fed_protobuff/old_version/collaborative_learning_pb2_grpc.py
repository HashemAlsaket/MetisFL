# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from federation.fed_protobuff import collaborative_learning_pb2 as federation_dot_fed__protobuff_dot_collaborative__learning__pb2


class CollabLearningStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.IsSystemStatScoreReached = channel.unary_unary(
        '/federation.fed_protobuff.CollabLearning/IsSystemStatScoreReached',
        request_serializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.DoubleValue.SerializeToString,
        response_deserializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.Ack.FromString,
        )
    self.IsSystemExecutionTimeReached = channel.unary_unary(
        '/federation.fed_protobuff.CollabLearning/IsSystemExecutionTimeReached',
        request_serializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.DoubleValue.SerializeToString,
        response_deserializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.Ack.FromString,
        )
    self.IsLearnerCommunityUpdateSignalReached = channel.unary_unary(
        '/federation.fed_protobuff.CollabLearning/IsLearnerCommunityUpdateSignalReached',
        request_serializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.Learner.SerializeToString,
        response_deserializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.Ack.FromString,
        )
    self.RetrieveFederationRoundExecutionMetadataFromController = channel.unary_unary(
        '/federation.fed_protobuff.CollabLearning/RetrieveFederationRoundExecutionMetadataFromController',
        request_serializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.Learner.SerializeToString,
        response_deserializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.JsonStringValue.FromString,
        )
    self.ResetControllerFederationRoundCollections = channel.unary_unary(
        '/federation.fed_protobuff.CollabLearning/ResetControllerFederationRoundCollections',
        request_serializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.EmptyMessage.SerializeToString,
        response_deserializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.Ack.FromString,
        )
    self.NotifyLearnersFederationRoundSignalReached = channel.unary_stream(
        '/federation.fed_protobuff.CollabLearning/NotifyLearnersFederationRoundSignalReached',
        request_serializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.EmptyMessage.SerializeToString,
        response_deserializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.Ack.FromString,
        )
    self.NotifyLearnersSessionTerminationSignalReached = channel.unary_stream(
        '/federation.fed_protobuff.CollabLearning/NotifyLearnersSessionTerminationSignalReached',
        request_serializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.EmptyMessage.SerializeToString,
        response_deserializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.Ack.FromString,
        )
    self.NotifyControllerToUpdateFederationRoundSignals = channel.stream_unary(
        '/federation.fed_protobuff.CollabLearning/NotifyControllerToUpdateFederationRoundSignals',
        request_serializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.FedRoundSignals.SerializeToString,
        response_deserializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.Ack.FromString,
        )
    self.SendLearnerExecutionResultToController = channel.stream_unary(
        '/federation.fed_protobuff.CollabLearning/SendLearnerExecutionResultToController',
        request_serializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.LearnerExecutionResult.SerializeToString,
        response_deserializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.Ack.FromString,
        )
    self.CommunityUpdateWithLearnerState = channel.stream_unary(
        '/federation.fed_protobuff.CollabLearning/CommunityUpdateWithLearnerState',
        request_serializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.LearnerExecutionResult.SerializeToString,
        response_deserializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.NetworkMatrices.FromString,
        )
    self.CommunityUpdateCurrentState = channel.unary_unary(
        '/federation.fed_protobuff.CollabLearning/CommunityUpdateCurrentState',
        request_serializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.Learner.SerializeToString,
        response_deserializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.NetworkMatrices.FromString,
        )
    self.LearnerLocalIterationsRequest = channel.unary_unary(
        '/federation.fed_protobuff.CollabLearning/LearnerLocalIterationsRequest',
        request_serializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.LearnerExecutionMetadata.SerializeToString,
        response_deserializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.IntegerValue.FromString,
        )
    self.LearnerCommunityStateMetadata = channel.unary_unary(
        '/federation.fed_protobuff.CollabLearning/LearnerCommunityStateMetadata',
        request_serializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.Learner.SerializeToString,
        response_deserializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.CommunityStateMetadata.FromString,
        )
    self.RequestGlobalEpochID = channel.unary_unary(
        '/federation.fed_protobuff.CollabLearning/RequestGlobalEpochID',
        request_serializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.Learner.SerializeToString,
        response_deserializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.IntegerValue.FromString,
        )
    self.LearnerStalenessCommunityRequestEligibility = channel.unary_unary(
        '/federation.fed_protobuff.CollabLearning/LearnerStalenessCommunityRequestEligibility',
        request_serializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.LearnerStalenessMetadata.SerializeToString,
        response_deserializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.Ack.FromString,
        )


class CollabLearningServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def IsSystemStatScoreReached(self, request, context):
    """Unary RPC. Check if test accuracy is reached.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def IsSystemExecutionTimeReached(self, request, context):
    """Unary RPC. Check if execution time is reached.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def IsLearnerCommunityUpdateSignalReached(self, request, context):
    """Unary RPC. Check if the learner has reached the satisfied conditions to request an update.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RetrieveFederationRoundExecutionMetadataFromController(self, request, context):
    """Unary RPC. One time request for retrieving execution metadata from controller.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ResetControllerFederationRoundCollections(self, request, context):
    """Unary RPC. Reset all the collections of the Controller in order to start a new federation round afresh.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def NotifyLearnersFederationRoundSignalReached(self, request, context):
    """Server-Streaming RPC. Every learner asynchronously (through deamon thread) listens for incoming execution signal updates.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def NotifyLearnersSessionTerminationSignalReached(self, request, context):
    """Server-Streaming RPC. Every learner asynchronously (through deamon thread) listens for incoming computation termination signals.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def NotifyControllerToUpdateFederationRoundSignals(self, request_iterator, context):
    """Learner-Streaming RPC. Server must listen to the stream for incoming update signals from the Learners.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendLearnerExecutionResultToController(self, request_iterator, context):
    """Learner-Streaming RPC. Learner sends weights (e.g. when finished training). Server must listen for all the incoming requests from the Learners.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CommunityUpdateWithLearnerState(self, request_iterator, context):
    """Learner-Streaming RPC. Learner requests a community update an at the same time sends its local weights. Receives community weights answer.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CommunityUpdateCurrentState(self, request, context):
    """Unary RPC. Simply query the controller to return current community state.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def LearnerLocalIterationsRequest(self, request, context):
    """Unary RPC. Query controller with execution metadata for the value of the local epochs in-between update requests
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def LearnerCommunityStateMetadata(self, request, context):
    """Unary RPC. Query controller to retrieve metadata regarding community state.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RequestGlobalEpochID(self, request, context):
    """Unary RPC. Query controller to retrieve the current global epoch number.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def LearnerStalenessCommunityRequestEligibility(self, request, context):
    """Unary RPC. Query controller for community request eligibility based on staleness.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CollabLearningServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'IsSystemStatScoreReached': grpc.unary_unary_rpc_method_handler(
          servicer.IsSystemStatScoreReached,
          request_deserializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.DoubleValue.FromString,
          response_serializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.Ack.SerializeToString,
      ),
      'IsSystemExecutionTimeReached': grpc.unary_unary_rpc_method_handler(
          servicer.IsSystemExecutionTimeReached,
          request_deserializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.DoubleValue.FromString,
          response_serializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.Ack.SerializeToString,
      ),
      'IsLearnerCommunityUpdateSignalReached': grpc.unary_unary_rpc_method_handler(
          servicer.IsLearnerCommunityUpdateSignalReached,
          request_deserializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.Learner.FromString,
          response_serializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.Ack.SerializeToString,
      ),
      'RetrieveFederationRoundExecutionMetadataFromController': grpc.unary_unary_rpc_method_handler(
          servicer.RetrieveFederationRoundExecutionMetadataFromController,
          request_deserializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.Learner.FromString,
          response_serializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.JsonStringValue.SerializeToString,
      ),
      'ResetControllerFederationRoundCollections': grpc.unary_unary_rpc_method_handler(
          servicer.ResetControllerFederationRoundCollections,
          request_deserializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.EmptyMessage.FromString,
          response_serializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.Ack.SerializeToString,
      ),
      'NotifyLearnersFederationRoundSignalReached': grpc.unary_stream_rpc_method_handler(
          servicer.NotifyLearnersFederationRoundSignalReached,
          request_deserializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.EmptyMessage.FromString,
          response_serializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.Ack.SerializeToString,
      ),
      'NotifyLearnersSessionTerminationSignalReached': grpc.unary_stream_rpc_method_handler(
          servicer.NotifyLearnersSessionTerminationSignalReached,
          request_deserializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.EmptyMessage.FromString,
          response_serializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.Ack.SerializeToString,
      ),
      'NotifyControllerToUpdateFederationRoundSignals': grpc.stream_unary_rpc_method_handler(
          servicer.NotifyControllerToUpdateFederationRoundSignals,
          request_deserializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.FedRoundSignals.FromString,
          response_serializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.Ack.SerializeToString,
      ),
      'SendLearnerExecutionResultToController': grpc.stream_unary_rpc_method_handler(
          servicer.SendLearnerExecutionResultToController,
          request_deserializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.LearnerExecutionResult.FromString,
          response_serializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.Ack.SerializeToString,
      ),
      'CommunityUpdateWithLearnerState': grpc.stream_unary_rpc_method_handler(
          servicer.CommunityUpdateWithLearnerState,
          request_deserializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.LearnerExecutionResult.FromString,
          response_serializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.NetworkMatrices.SerializeToString,
      ),
      'CommunityUpdateCurrentState': grpc.unary_unary_rpc_method_handler(
          servicer.CommunityUpdateCurrentState,
          request_deserializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.Learner.FromString,
          response_serializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.NetworkMatrices.SerializeToString,
      ),
      'LearnerLocalIterationsRequest': grpc.unary_unary_rpc_method_handler(
          servicer.LearnerLocalIterationsRequest,
          request_deserializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.LearnerExecutionMetadata.FromString,
          response_serializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.IntegerValue.SerializeToString,
      ),
      'LearnerCommunityStateMetadata': grpc.unary_unary_rpc_method_handler(
          servicer.LearnerCommunityStateMetadata,
          request_deserializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.Learner.FromString,
          response_serializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.CommunityStateMetadata.SerializeToString,
      ),
      'RequestGlobalEpochID': grpc.unary_unary_rpc_method_handler(
          servicer.RequestGlobalEpochID,
          request_deserializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.Learner.FromString,
          response_serializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.IntegerValue.SerializeToString,
      ),
      'LearnerStalenessCommunityRequestEligibility': grpc.unary_unary_rpc_method_handler(
          servicer.LearnerStalenessCommunityRequestEligibility,
          request_deserializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.LearnerStalenessMetadata.FromString,
          response_serializer=federation_dot_fed__protobuff_dot_collaborative__learning__pb2.Ack.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'federation.fed_protobuff.CollabLearning', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
