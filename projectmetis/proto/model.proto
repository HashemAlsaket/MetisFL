syntax = "proto3";
package projectmetis;

///////////////////////////
// Tensor Representation //
///////////////////////////

// Structural info of a tensor.
message TensorSpec {
  // Length of the tensor, i.e., total number of values it stores.
  uint32 length = 1;

  // The size of each dimension of the tensor.
  repeated uint32 dimensions = 2;

  // Supported data types.
  enum DType {
    UNKNOWN = 0;
    INT = 1;
    LONG = 2;
    FLOAT = 3;
    DOUBLE = 4;
  }

  // (Optional) The data type this tensor holds; may be used for
  // casting the values to a specific type.
  DType dtype = 3;
}

// Tensor storing double values.
message DoubleTensor {
  // Tensor metadata.
  TensorSpec spec = 1;

  // Flattened representation of the array.
  repeated double values = 2;
}

// Tensor storing integer values.
message IntTensor {
  // Tensor metadata.
  TensorSpec spec = 1;

  // Flattened representation of the array.
  repeated int32 values = 2;
}

// Tensor storing double values.
message CiphertextTensor {
  // Tensor metadata.
  TensorSpec spec = 1;

  // Bytes (encrypted) representation of the array.
  bytes values = 2;
}

//////////////////////////
// Model Representation //
//////////////////////////

// Represents a machine learning model.
message Model {
  message Variable {
    // The name of the variable.
    string name = 1;

    // Set to true if this is a trainable variable. Otherwise, false.
    bool trainable = 2;

    // The tensor holding the values of this variable.
    oneof tensor {
      IntTensor int_tensor = 3;
      DoubleTensor double_tensor = 4;
      CiphertextTensor ciphertext_tensor = 5;
    }
  }

  // Model's variables.
  repeated Variable variables = 1;
}

// Represents a community model.
message FederatedModel {
  // Number of entities that contributed to the aggregation of this model.
  uint32 num_contributors = 1;

  uint32 global_iteration = 2;

  // The aggregated community model.
  Model model = 3;
}

////////////////
// Optimizers //
////////////////

message OptimizerConfig {
  oneof config {
    VanillaSGD vanilla_sgd = 1;
    MomentumSGD momentum_sgd = 2;
    FedProx fed_prox = 3;
    Adam adam = 4;
  }
}

message VanillaSGD {
  float learning_rate = 1;
  float L1_reg = 2;
  float L2_reg = 3;
}

message MomentumSGD {
  float learning_rate = 1;
  float momentum_factor = 2;
}

message FedProx {
  float learning_rate = 1;
  float proximal_term = 2;
}

message Adam {
  float learning_rate = 1;
  float beta_1 = 2;
  float beta_2 = 3;
  float epsilon = 4;
}
