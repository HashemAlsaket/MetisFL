load("@rules_foreign_cc//foreign_cc:cmake.bzl", "cmake")
load("@rules_cc//cc:defs.bzl", "cc_library", "cc_binary", "cc_import")
load("@rules_python//python:defs.bzl", "py_library", "py_binary")
load("@pybind11_bazel//:build_defs.bzl", "pybind_extension")

package(default_visibility = ["//visibility:public"])

cmake(
    name = "palisade_cmake",
    cache_entries = {
        "BUILD_SHARED": "OFF",
        "BUILD_STATIC": "ON",
        "BUILD_UNITTESTS": "OFF",
        "BUILD_BENCHMARKS": "OFF",
        "BUILD_EXAMPLES": "OFF",
        "BUILD_EXTRAS": "OFF",
        "CMAKE_MACOSX_RPATH": "True",
    },
    lib_name = "Palisade",
    lib_source = "@palisade_git//:all",
    # Expect to find the following ./lib/* as the result of the build.
    out_static_libs = [
        "libPALISADEcore_static.a",
        "libPALISADEbinfhe_static.a",
        "libPALISADEpke_static.a",
    ],
    postfix_script = """
    cp -a $INSTALLDIR/include/palisade/cereal $INSTALLDIR/include
    cp -a $INSTALLDIR/include/palisade/binfhe/ $INSTALLDIR/include
    cp -a $INSTALLDIR/include/palisade/core/ $INSTALLDIR/include
    cp -a $INSTALLDIR/include/palisade/pke/ $INSTALLDIR/include
    """,
)

cmake(
    # The modules of PyBind are considered as binaries. Therefore we need to use the out_binaries property.
    name = "shelfi_fhe_cmake",
    working_directory = "palisade_pybind/SHELFI_FHE/",
    # TODO Do not hardcode python interpreter but instead pick METIS env interpreter.
    cache_entries = {
        "CMAKE_MACOSX_RPATH": "True",
        "EXT_BUILD_ROOT": "$EXT_BUILD_ROOT"
    },
    lib_source = "@shelfi_fhe_git//:all",
    out_shared_libs = [
      "SHELFI_FHE.so"
    ],
    data = [
        ":palisade_cmake"
    ],
    build_data = [
        ":palisade_cmake"
    ],
    deps = [
        ":palisade_cmake"
    ],
)

cc_binary(
    name = "SHELFI_FHE.so",
    deps = [
        ":shelfi_fhe_cmake",
    ],
    linkopts = [
        "-Lpath/to/libs"
    ],
    linkshared = 1,
)

py_library(
    name = "shelfi_fhe_demo",
    srcs_version = "PY3",
    # Required field so that the shared object path can be appended to the PYTHONPATH.
    imports = [
        ":SHELFI_FHE.so",
    ],
    srcs = [
        "shelfi_fhe_helper.py"
    ],
    # Required field so that the shared object can be copied inside the python runtime environment.
    data = [
        ":SHELFI_FHE.so",
    ],
)

py_binary(
    name = "shelfi_fhe_demo_main",
    main = "shelfi_fhe_demo_main.py",
    srcs = [
        "shelfi_fhe_demo_main.py"
    ],
    srcs_version = "PY3",
    python_version = "PY3",
    legacy_create_init = False,
    deps = [
        ":shelfi_fhe_demo"
    ],
)
