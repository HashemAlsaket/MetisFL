syntax = "proto3";
package metisfl;

import "metisfl/proto/model.proto";
import "metisfl/proto/service_common.proto";
import "google/protobuf/timestamp.proto";

service LearnerService {
  rpc GetHealthStatus (Empty) returns (Ack) {}

  rpc GetModel (Empty) returns (Model) {}

  rpc SetInitialModel (Model) returns (Ack) {}

  rpc Train (TrainRequest) returns (Ack) {}

  rpc Evaluate (EvaluateRequest) returns (EvaluateResponse) {}

  rpc ShutDown (Empty) returns (Ack) {}
}

message Task {
  string id = 1;
  string learner_id = 2;
  google.protobuf.Timestamp sent_at = 3;
  google.protobuf.Timestamp received_at = 4;
  google.protobuf.Timestamp completed_at = 5;
}

message TrainRequest {
  Task task = 1;
  Model model = 2;
  TrainParams params = 3;
}

message TrainParams {
  uint32 batch_size = 1;
  uint32 epochs = 2;
  uint32 num_local_updates = 3;
  // Metrics and metadata to be collected during training. Learner must return
  repeated string metrics = 4;
  repeated string metadata = 5;
}

message EvaluateRequest {
  Task task = 1;
  Model model = 2;
  EvaluationParams params = 3;
}

message EvaluationParams {
  uint32 batch_size = 1;
  repeated string metrics = 2;
}

message EvaluateResponse {
  Task task = 1;
  EvaluationResults results = 2;
}

message EvaluationResults {
  map<string, float> metrics = 1;
}
