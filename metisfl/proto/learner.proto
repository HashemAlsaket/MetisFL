syntax = "proto3";
package metisfl;

import "metisfl/proto/model.proto";
import "metisfl/proto/service_common.proto";

service LearnerService {
  rpc GetHealthStatus (Empty) returns (Ack) {}

  rpc GetModel (Empty) returns (Model) {}

  rpc SetInitialWeights (Model) returns (Ack) {}

  rpc Train (TrainRequest) returns (Ack) {}

  rpc Evaluate (EvaluateRequest) returns (EvaluateResponse) {}

  rpc ShutDown (Empty) returns (Ack) {}
}

message TrainRequest {
  string task_id = 1;
  Model model = 2;
  TrainParams params = 3;
}

message TrainParams {
  uint32 batch_size = 2;
  uint32 epochs = 3;
  uint32 num_local_updates = 4;
  repeated string metrics = 5;
}

message EvaluateRequest {
  string task_id = 1;
  Model model = 2;
  EvaluationParams params = 3;
}

message EvaluationParams {
  uint32 batch_size = 1;
  repeated string metrics = 2;
}

message EvaluateResponse {
  string task_id = 1;
  EvaluationResults results = 2;
}

message EvaluationResults {
  map<string, float> metrics = 1;
}
