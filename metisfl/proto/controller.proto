syntax = "proto3";
package metisfl;

import "google/protobuf/timestamp.proto";

import "metisfl/proto/model.proto";
import "metisfl/proto/service_common.proto";
import "metisfl/proto/learner.proto";

service ControllerService {
  rpc GetHealthStatus (Empty) returns (Ack) {}

  rpc SetInitialModel (Model) returns (Ack) {}

  rpc JoinFederation (LearnerDescriptor) returns (LearnerId) {}

  rpc LeaveFederation (LearnerId) returns (Ack) {}

  rpc StartTraining (Empty) returns (Ack) {}

  rpc TrainDone (TrainDoneRequest) returns (Ack) {}

  rpc GetStatistics (GetStatisticsRequest) returns (GetStatisticsResponse) {}
  
  rpc ShutDown (Empty) returns (Ack) {}
}

message LearnerDescriptor {
  string hostname = 1;
  uint32 port = 2;
  string root_certificate_bytes = 3;
  string public_certificate_bytes = 4;
  uint32 num_training_examples = 5;
}

message LearnerId {
  string id = 1;
}

message TrainDoneRequest {
  string learner_id = 1;
  string tasl_id = 2;
  Model model = 3;
}

message TrainingMetadata {
  map<string, string> metrics = 1;
  float completed_epochs =  2;
  uint32 completed_batches = 3;
  uint32 batch_size = 4;
  float processing_ms_per_epoch = 5;
  float processing_ms_per_batch = 6;
}

message GetStatisticsRequest {
  int32 community_evaluation_backtracks = 1;
  int32 local_task_backtracks = 2;
  int32 metadata_backtracks = 3;
}

message GetStatisticsResponse {
  repeated string learner_id = 1;
  repeated CommunityModelEvaluation community_evaluation = 2;
  map<string, TrainingMetadata> learners_task = 3;
  repeated FederatedTaskRuntimeMetadata metadata = 4;
  string json_metadata = 5;
}

message CommunityModelEvaluation {
  map<string, EvaluateResponse> evaluations = 2;
}

message FederatedTaskRuntimeMetadata {
  google.protobuf.Timestamp started_at = 2;
  google.protobuf.Timestamp completed_at = 3;
  repeated string assigned_to_learner_id = 4;
  repeated string completed_by_learner_id = 5;
  // The times for train and eval tasks are based on the time they are submitted/sent
  // to the learners. They do not reflect the "true" time it takes for actual training
  // and evaluation, since the period (submitted_at, received_at) also contains the
  // communication time - message exchanges roundtrip.
  map<string, google.protobuf.Timestamp> train_task_submitted_at = 6;
  map<string, google.protobuf.Timestamp> train_task_received_at = 7;
  map<string, double> model_insertion_duration_ms = 10;
  map<string, double> model_selection_duration_ms = 11;
  google.protobuf.Timestamp model_aggregation_started_at = 12;
  google.protobuf.Timestamp model_aggregation_completed_at = 13;
  double model_aggregation_total_duration_ms = 14;
  repeated double model_aggregation_block_size = 15;
  repeated double model_aggregation_block_memory_kb = 16;
  repeated double model_aggregation_block_duration_ms = 17;
  repeated TensorQuantifier model_tensor_quantifiers = 18;
}
