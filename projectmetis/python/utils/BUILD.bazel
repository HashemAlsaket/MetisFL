load("@rules_python//python:defs.bzl", "py_library", "py_test")

package(default_visibility = ["//visibility:public"])

py_library(
    name = "utils_py_lib",
    srcs = [
        "bazel_services_factory.py",
        "docker_services_factory.py",
        "fedenv_parser.py",
        "formatting.py",
        "grpc_controller_client.py",
        "grpc_learner_client.py",
        "grpc_services.py",
        "proto_messages_factory.py",
    ],
    srcs_version = "PY3",
    deps = [
        "//projectmetis/proto:controller_py_grpc",
        "//projectmetis/proto:learner_py_grpc",
        "//pybind/fhe:fhe_pybind_lib",
    ],
    data = [
      "//resources:fhe_cryptoparams"
    ]
)


# Generates learner executable binary.
py_test(
    # You need to run this with `bazel run` to get function name and output.
    name = "proto_messages_factory_test",
    srcs = [
        "proto_messages_factory_test.py",
    ],
    srcs_version = "PY3",
    python_version = "PY3",
    legacy_create_init = False,
    deps = [
        ":utils_py_lib",
    ],
)

test_suite(
    # You need to run this with `bazel run` to get function name and output.
    name = "all_tests",
    tests = [
      ":proto_messages_factory_test"
    ],
)